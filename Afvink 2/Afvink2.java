/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.maventest.afvink2course5;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import javazoom.jl.player.Player;
import java.util.Random;
import javax.swing.JFileChooser;

/**
 *
 * @author thijs
 */
class CustomFilter extends javax.swing.filechooser.FileFilter {
    @Override
    public boolean accept(File file) {
        // Allow only directories, or files with ".txt" extension
        return file.isDirectory() || file.getAbsolutePath().endsWith(".mp3");
    }
    @Override
    public String getDescription() {
        return "mp3 files (*.mp3)";
    }
} 




public class Afvink2 extends javax.swing.JFrame {

    /** Creates new form Afvink2
     * @param filename */
    public Afvink2(String filename) {
        //System.out.println(filename);
        initComponents();
        this.filename = filename;
    }

    /** This method is called from with6in the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        PrintMolButton = new javax.swing.JButton();
        YTextField = new javax.swing.JTextField();
        XtextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        PrintPane = new javax.swing.JPanel();
        Liquid = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        MenuClearingCheckbox = new javax.swing.JCheckBoxMenuItem();
        MenuReset = new javax.swing.JMenuItem();
        ChooseMusic = new javax.swing.JMenuItem();
        CloseMenu = new javax.swing.JMenuItem();
        BackGroundPaneCheck = new javax.swing.JCheckBoxMenuItem();

        fileChooser.setDialogTitle("ONLY OPEN MP3 FILES WITH THIS");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("H2O Tekenen - Thijs");
        setResizable(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });

        PrintMolButton.setText("Print");
        PrintMolButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintMolButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Y");

        jLabel2.setText("X");

        javax.swing.GroupLayout PrintPaneLayout = new javax.swing.GroupLayout(PrintPane);
        PrintPane.setLayout(PrintPaneLayout);
        PrintPaneLayout.setHorizontalGroup(
            PrintPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        PrintPaneLayout.setVerticalGroup(
            PrintPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        Liquid.setText("An actual liquid");
        Liquid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LiquidActionPerformed(evt);
            }
        });

        jMenu1.setText("Settings");

        MenuClearingCheckbox.setText("No clearing");
        MenuClearingCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuClearingCheckboxActionPerformed(evt);
            }
        });
        jMenu1.add(MenuClearingCheckbox);

        MenuReset.setText("Reset");
        MenuReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuResetActionPerformed(evt);
            }
        });
        jMenu1.add(MenuReset);

        ChooseMusic.setText("Music");
        ChooseMusic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooseMusicActionPerformed(evt);
            }
        });
        jMenu1.add(ChooseMusic);

        CloseMenu.setText("Close");
        CloseMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseMenuActionPerformed(evt);
            }
        });
        jMenu1.add(CloseMenu);

        BackGroundPaneCheck.setText("?");
        BackGroundPaneCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackGroundPaneCheckActionPerformed(evt);
            }
        });
        jMenu1.add(BackGroundPaneCheck);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(PrintPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(XtextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Liquid, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(YTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(PrintMolButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PrintPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(XtextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(YTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PrintMolButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Liquid)
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    // constructor that takes the name of an MP3 file
    // constructor that takes the name of an MP3 file

    public void close() { if (player != null) player.close(); }

    // play the MP3 file to the sound card
    public void play() {
        try {
            if (filename.isEmpty()){
                filename = "Wasser.mp3";
            }
            FileInputStream fis     = new FileInputStream(filename);
            BufferedInputStream bis = new BufferedInputStream(fis);
            player = new Player(bis);
        }
        catch (Exception e) {
            System.out.println("Problem playing file " + filename);
            System.out.println(e);
        }

        // run in new thread to play in background
        new Thread() {
            public void run() {
                try { player.play(); }
                catch (Exception e) { System.out.println(e); }
            }
        }.start();}
    

    private void drawing(int Xpos,int Ypos){
        //play();
        
        Graphics circle_1 = PrintPane.getGraphics();
        Graphics circle_2 = PrintPane.getGraphics();
        Graphics circle_3 = PrintPane.getGraphics();
        Graphics line_1 = PrintPane.getGraphics();
        Graphics line_2 = PrintPane.getGraphics();
        
        circle_1.setColor(Color.red);
        circle_2.setColor(Color.red);
        circle_3.setColor(Color.blue);
        
        circle_1.fillOval(Xpos-25,Ypos+25,25,25);
        circle_2.fillOval(Xpos-25,Ypos-50, 25, 25);
        circle_3.fillOval(Xpos+15, Ypos-20, 40, 40);
        
        circle_1.drawOval(Xpos-25,Ypos+25,25,25);
        circle_2.drawOval(Xpos-25,Ypos-50, 25, 25);
        circle_3.drawOval(Xpos+15, Ypos-20, 40, 40);
        
        line_1.drawLine(Xpos-12, Ypos+25, Xpos+15, Ypos);
        line_2.drawLine(Xpos-12,Ypos-25, Xpos+15, Ypos);
        
    } //Drawing
    
    
    private void PrintMolButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintMolButtonActionPerformed
        play();
        Graphics paper = PrintPane.getGraphics();  
        //boolean NoError = true;
        
        X_cache = X_pos;
        Y_cache = Y_pos;
       
        paper.clearRect(0,0,400,400);
        
        try{
        X_pos = Integer.valueOf(XtextField.getText());
        Y_pos = Integer.valueOf(YTextField.getText());
        }catch(NumberFormatException exc){
            javax.swing.JOptionPane.showMessageDialog(null, "One or two values arent assigned or letters are used");
            //NoError = false;
            if(Passed == 0){
                return;
            }else{
            X_pos = X_cache;Y_pos = Y_cache;}           
        }
        if (X_pos > 344| Y_pos > 348| X_pos < 20|Y_pos < 20){
            X_pos = 80;
            Y_pos = 100;
            javax.swing.JOptionPane.showMessageDialog(null, "Value is too large, reset to 80,100");
        }
        
        drawing(X_pos,Y_pos); // External method
        
        Passed += 1; 
        System.out.println(Passed);
           
    }//GEN-LAST:event_PrintMolButtonActionPerformed

// Extra functies    
    
    private void LiquidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LiquidActionPerformed
        Liquid.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if(e.getStateChange() == ItemEvent.SELECTED) {//checkbox has been selected
                    LiquidOption = true;
                    Liquid.setFont(Liquid.getFont().deriveFont(Font.BOLD));
                } else {//checkbox has been deselected
                    LiquidOption = false;
                    Liquid.setFont(Liquid.getFont().deriveFont(Font.PLAIN));
                }
            }
        });
    }//GEN-LAST:event_LiquidActionPerformed

    private void MenuClearingCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuClearingCheckboxActionPerformed
        MenuClearingCheckbox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if(e.getStateChange() == ItemEvent.SELECTED) {//checkbox has been selected
                    MultipleW = true;
                    MenuClearingCheckbox.setFont(MenuClearingCheckbox.getFont().deriveFont(Font.BOLD));
                } else {//checkbox has been deselected
                    MultipleW = false;
                    MenuClearingCheckbox.setFont(MenuClearingCheckbox.getFont().deriveFont(Font.PLAIN));
                };
            }
        });
    }//GEN-LAST:event_MenuClearingCheckboxActionPerformed

    private void MenuResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuResetActionPerformed
        dispose();
        new Afvink2(filename).setVisible(true); 
    }//GEN-LAST:event_MenuResetActionPerformed

    private void CloseMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseMenuActionPerformed
        dispose();
    }//GEN-LAST:event_CloseMenuActionPerformed

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        if(BackGround){
            Color color = new Color(randomGenerator.nextInt(256), randomGenerator.nextInt(256), randomGenerator.nextInt(256));
            PrintPane.setBackground(color);
            for(int i = 0; i < 5; i++){drawing(randomGenerator.nextInt(300)+25, randomGenerator.nextInt(275)+45);}
        }
        
        if(LiquidOption){
            drawing(randomGenerator.nextInt(318)+26, randomGenerator.nextInt(297)+52);
        }
        
        
        
    }//GEN-LAST:event_formMouseMoved

    private void BackGroundPaneCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackGroundPaneCheckActionPerformed
        BackGroundPaneCheck.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if(e.getStateChange() == ItemEvent.SELECTED) {//checkbox has been selected
                    BackGround = true;
                    BackGroundPaneCheck.setFont(BackGroundPaneCheck.getFont().deriveFont(Font.BOLD));
                } else {//checkbox has been deselected
                    BackGround = false;
                    BackGroundPaneCheck.setFont(BackGroundPaneCheck.getFont().deriveFont(Font.PLAIN));
                };
            }
        });
    }//GEN-LAST:event_BackGroundPaneCheckActionPerformed

    private void ChooseMusicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChooseMusicActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            filename = file.toString();
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_ChooseMusicActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Afvink2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Afvink2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Afvink2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Afvink2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Afvink2("Wasser.mp3").setVisible(true);
            }
        });



    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem BackGroundPaneCheck;
    private javax.swing.JMenuItem ChooseMusic;
    private javax.swing.JMenuItem CloseMenu;
    private javax.swing.JCheckBox Liquid;
    private javax.swing.JCheckBoxMenuItem MenuClearingCheckbox;
    private javax.swing.JMenuItem MenuReset;
    private javax.swing.JButton PrintMolButton;
    private javax.swing.JPanel PrintPane;
    private javax.swing.JTextField XtextField;
    private javax.swing.JTextField YTextField;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
    private Integer Passed = 0; // Primitive int zou minder geheugen opnemen.
    private Integer X_pos;
    private Integer Y_pos;
    private Integer X_cache;
    private Integer Y_cache;
    private String filename = "Wasser.mp3";
    private Player player;
    private boolean MultipleW;
    private boolean LiquidOption;
    private boolean BackGround;
    private boolean CheckingNeed = true;
    Random randomGenerator = new Random();
}


